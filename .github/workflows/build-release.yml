name: Build and Release All Artifacts

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  release:
    types: [published]

jobs:
  # 1. RPM 构建
  build-rpm:
    name: Build RPMs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elver: [7, 8, 9, 10]
        arch: [x86_64, aarch64]
    env:
      VERSION: 7.4.1
      RELEASE: 1
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm m4 dos2unix fakeroot gcc g++ make cmake python3 python3-pip
      - name: Install Mono
        run: |
          sudo apt-get install -y mono-complete || sudo dnf install -y mono-complete || true
      - name: Build and install jemalloc 5.3.0
        run: |
          wget https://github.com/jemalloc/jemalloc/releases/download/5.3.0/jemalloc-5.3.0.tar.bz2
          tar -xjf jemalloc-5.3.0.tar.bz2
          cd jemalloc-5.3.0
          ./configure --prefix=/usr/local
          make -j$(nproc) VERBOSE=1
          sudo make install
          cd ..
          sudo ldconfig
      - name: Set jemalloc_ROOT for CMake
        run: echo "jemalloc_ROOT=/usr/local" >> $GITHUB_ENV
      - name: Clean build directory
        run: rm -rf build
      - name: Build FoundationDB binaries
        run: |
          mkdir -p build
          cd build
          cmake -DCMAKE_PREFIX_PATH=/usr/local -DBOOST_ROOT=/usr/local -DBoost_NO_SYSTEM_PATHS=ON ..
          make -j$(nproc) VERBOSE=1
          cd ..
      - name: Prepare bin and lib for packaging
        run: |
          mkdir -p bin lib
          cp build/bin/* bin/ || true
          cp build/lib/* lib/ || true
          mkdir -p bindings/c/foundationdb
          cp build/bindings/c/foundationdb/*.h bindings/c/foundationdb/ || true
      - name: Build RPMs
        run: |
          mkdir -p packages
          ./packaging/rpm/buildrpms.sh ${{ env.VERSION }} ${{ env.RELEASE }} ${{ matrix.elver }} ${{ matrix.arch }}
      - uses: actions/upload-artifact@v4
        with:
          name: rpm-el${{ matrix.elver }}-${{ matrix.arch }}
          path: packages/*.rpm

  # Fedora RPM 构建
  build-fedora-rpm:
    name: Build Fedora RPMs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elver: [fedora41, fedora42]
        arch: [amd64, arm64]
    env:
      VERSION: 7.4.1
      RELEASE: 1
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y rpm m4 dos2unix fakeroot gcc g++ make cmake python3 python3-pip
      - name: Install Mono
        run: |
          sudo apt-get install -y mono-complete || sudo dnf install -y mono-complete || true
      - name: Build and install jemalloc 5.3.0
        run: |
          wget https://github.com/jemalloc/jemalloc/releases/download/5.3.0/jemalloc-5.3.0.tar.bz2
          tar -xjf jemalloc-5.3.0.tar.bz2
          cd jemalloc-5.3.0
          ./configure --prefix=/usr/local
          make -j$(nproc) VERBOSE=1
          sudo make install
          cd ..
          sudo ldconfig
      - name: Set jemalloc_ROOT for CMake
        run: echo "jemalloc_ROOT=/usr/local" >> $GITHUB_ENV
      - name: Clean build directory
        run: rm -rf build
      - name: Build FoundationDB binaries
        run: |
          mkdir -p build
          cd build
          cmake -DCMAKE_PREFIX_PATH=/usr/local -DBOOST_ROOT=/usr/local -DBoost_NO_SYSTEM_PATHS=ON ..
          make -j$(nproc) VERBOSE=1
          cd ..
      - name: Prepare bin and lib for packaging
        run: |
          mkdir -p bin lib
          cp build/bin/* bin/ || true
          cp build/lib/* lib/ || true
          mkdir -p bindings/c/foundationdb
          cp build/bindings/c/foundationdb/*.h bindings/c/foundationdb/ || true
      - name: Build RPMs
        run: |
          mkdir -p packages
          ./packaging/rpm/buildrpms.sh ${{ env.VERSION }} ${{ env.RELEASE }} ${{ matrix.elver }} ${{ matrix.arch }}
      - uses: actions/upload-artifact@v4
        with:
          name: rpm-${{ matrix.elver }}-${{ matrix.arch }}
          path: packages/*.rpm
